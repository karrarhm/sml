@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix dsa: <http://w3id.org/dsa/> .
@prefix otl: <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/> .
@prefix ldoc: <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/document-extractions/> .
@prefix lkos: <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/kos/> .
@prefix lspec: <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/specifications/> .
@prefix ls: <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/> .
@prefix lbm: <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/> .

<http://example.org/example#ConvertExternalSourceAspect> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?tgtAspect owl:equivalentProperty ?tgtSameAsExternalURI .
				?tgtAspect skos:related ?tgtRelatedToExternalURI .
			}
			WHERE {
				?aspect otl:rel-Conceptual-hasExternalLink ?this .
				?aspect a otl:Aspect .
				OPTIONAL {
					?aspect otl:rel-Conceptual-hasExternalLink ?1externalRelation .
					?1externalRelation a otl:ExternalLink .
					?1externalRelation otl:attr-ExternalLink-relation \"isSameAs\" .
					?1externalRelation otl:attr-ExternalLink-uri ?sameAsExternalURI .
					BIND (URI(str(?sameAsExternalURI)) AS ?tgtSameAsExternalURI) .
				} .
				OPTIONAL {
					?aspect otl:rel-Conceptual-hasExternalLink ?2externalRelation .
					?2externalRelation a otl:ExternalLink .
					?2externalRelation otl:attr-ExternalLink-relation \"isRelatedTo\" .
					?2externalRelation otl:attr-ExternalLink-uri ?relatedToExternalURI .
					BIND (URI(str(?relatedToExternalURI)) AS ?tgtRelatedToExternalURI) .
				} .
				BIND (URI(STR(?aspect)) AS ?tgtAspect) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass otl:ExternalLink .

<http://example.org/example#ConvertShapes> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?tgtThis a sh:NodeShape .
				?tgtThis sh:targetClass ?tgtShapeObject .
				?tgtThis skos:prefLabel ?tgtObjectName .
				?tgtThis skos:definition ?tgtObjectDescription .
				?tgtThis skos:note ?tgtObjectNote .
			}
			WHERE {
				?shapeObject otl:rel-Conceptual-hasShape ?this .
				BIND (URI(STR(?shapeObject)) AS ?tgtShapeObject) .
				OPTIONAL {
					?this bm:attr-ShapeElement-name ?tgtObjectName .
				} .
				OPTIONAL {
					?this bm:attr-ShapeElement-description ?tgtObjectDescription .
				} .
				OPTIONAL {
					?this bm:attr-ShapeElement-note ?tgtObjectNote .
				} .
				BIND (URI(STR(?this)) AS ?tgtThis) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass lbm:Shape .

<http://example.org/example#ConvertAspectsWithoutRole> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?tgtAspect a rdf:Property .
				?tgtAspect rdfs:subPropertyOf ?tgtParent .
				?tgtAspect skos:prefLabel ?tgtAspectPrefName .
				?tgtAspect skos:altLabel ?tgtAspectAltName .
				?tgtAspect skos:definition ?tgtAttributeDescription .
				?tgtAspect skos:note ?tgtAspectNote .
				?tgtAspect skos:notation ?tgtAspectCode .
				?tgtAspect sml:abbreviation ?tgtAspectAbbreviation .
				?tgtAspect rdfs:range ?tgtRangeDatatype .
				?tgtAspect ?tgtAnnotationProperty ?tgtAnnotationValue .
				?tgtAnnotationProperty a owl:AnnotationProperty .
				?tgtAnnotationProperty skos:prefLabel ?tgtAnnotationName .
				?tgtAnnotationProperty rdfs:range xsd:string .
			}
			WHERE {
				FILTER NOT EXISTS {
					?hasAspect otl:rel-Relation-to ?this .
				} .
				?this shapes:sequence/rdf:_1 ?tgtAspectPrefName .
				OPTIONAL {
					?this otl:attr-Conceptual-name ?tgtAspectAltName .
					?this shapes:sequence/rdf:_1 ?tgtAspectPrefName .
					FILTER (?tgtAspectAltName != ?tgtAspectPrefName) .
				} .
				# Check if the aspect has a parent and whether it is an internal or external link
				OPTIONAL {
					?this otl:rel-Conceptual-isSpecializationOf ?parentAspect .
					OPTIONAL {
						?parentAspect shapes:sequence/rdf:_1 ?parentName .
						BIND (URI(STR(?parentAspect)) AS ?newParentAspectURI) .
					} .
					BIND (COALESCE(?newParentAspectURI, ?parentAspect) AS ?tgtParent) .
				} .
				OPTIONAL {
					?this otl:attr-Conceptual-description ?tgtAspectDescription .
				} .
				OPTIONAL {
					?this otl:attr-Aspect-datatype ?tgtRangeDatatype
				} .
				OPTIONAL {
					?this otl:attr-Conceptual-note ?tgtAspectNote .
				} .
				OPTIONAL {
					?this otl:attr-Conceptual-code ?tgtAspectCode .
				} .
				OPTIONAL {
					?this otl:attr-Conceptual-abbreviation ?tgtAspectAbbreviation .
				} .

				# Get the information attribute
				OPTIONAL {
					?this otl:rel-Conceptual-isDescribedIn ?informationField .
					?informationField otl:attr-InformationField-value ?tgtAnnotationValue .
					?informationField otl:rel-InformationField-isClassifiedAs ?informationType .
					?informationType otl:attr-Conceptual-name ?tgtAnnotationName .
					BIND (CONCAT(?tgtAnnotationName, \": \", ?tgtAnnotationValue) AS ?tgtConceptualInformation) .
					FILTER (STRLEN(str(?tgtAnnotationValue)) > 0) .
					BIND (ex:createURI(MD5(?tgtAnnotationName)) AS ?tgtAnnotationProperty) .
				} .
				BIND (URI(STR(?this)) AS ?tgtAspect) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass otl:Aspect .

<http://example.org/example#ConvertUnitOfMeasure> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?tgtUnitOfMeasure a <http://qudt.org/schema/qudt/Unit>.
				?tgtUnitOfMeasure skos:prefLabel ?tgtUnitName .
				?tgtUnitOfMeasure ?tgtAnnotationProperty ?tgtAnnotationValue .
				?tgtAnnotationProperty a owl:AnnotationProperty .
				?tgtAnnotationProperty skos:prefLabel ?tgtAnnotationName .
				?tgtAnnotationProperty rdfs:range xsd:string .
			}
			WHERE {
				?this shapes:sequence/rdf:_1 ?tgtUnitName .
				FILTER NOT EXISTS {
					?this otl:rel-Conceptual-hasExternalLink ?externalLink .
					?externalLink otl:attr-ExternalLink-relation \"isSameAs\" .
					?externalLink otl:attr-ExternalLink-uri ?externalUnitUri .
					FILTER regex(str(?externalUnitUri), \"http://qudt.org/vocab/unit/\", \"i\") .
				} .
				OPTIONAL {
					?this otl:rel-Conceptual-isDescribedIn ?informationField .
					?informationField otl:attr-InformationField-value ?tgtAnnotationValue .
					?informationField otl:rel-InformationField-isClassifiedAs ?informationType .
					?informationType otl:attr-Conceptual-name ?tgtAnnotationName .
					BIND (CONCAT(?tgtAnnotationName, \": \", ?tgtAnnotationValue) AS ?tgtConceptualInformation) .
					FILTER (STRLEN(str(?tgtAnnotationValue)) > 0) .
					BIND (ex:createURI(MD5(?tgtAnnotationName)) AS ?tgtAnnotationProperty) .
				} .
				
				BIND (URI(STR(?this)) AS ?tgtUnitOfMeasure) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass otl:UnitOfMeasure .

<http://example.org/example#ConvertAspectWithRole> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
							?tgtAspect a ?tgtPropertyType .
							?tgtAspect rdfs:subPropertyOf ?tgtParent .
							?tgtAspect rdfs:range ?tgtRangeDatatype .
							?tgtAspect skos:prefLabel ?tgtAspectPrefName .
							?tgtAspect skos:altLabel ?tgtAspectAltName .
							?tgtAspect skos:definition ?tgtAspectDescription .
							
							?tgtAspect skos:note ?tgtAspectNote .
							?tgtAspect skos:notation ?tgtAspectCode .
							?tgtAspect sml:abbreviation ?tgtAspectAbbreviation .
							
							?tgtAspect ?tgtAnnotationProperty ?tgtAnnotationValue .
							?tgtAnnotationProperty a owl:AnnotationProperty .
							?tgtAnnotationProperty skos:prefLabel ?tgtAnnotationName .
							?tgtAnnotationProperty rdfs:range xsd:string .

							?tgtAspectWithValue sh:property ?bnode1 .
							?tgtAspectWithValue a sh:NodeShape .
							?tgtAspectWithValue sh:targetClass ?tgtObject .

							?tgtShape sh:property ?bnode1 .
							?bnode1 sh:path ?tgtAspect .
							?bnode1 ?ShaclValueType ?tgtAspectDatatype . 

							# This is either sh:datatype ?tgtAspectDatatype or sh:class ?tgtAspectDatatype, depending on what is correct. ^^ 
							?bnode1 sh:class ?tgtAspectEnumeration .
							?bnode1 sh:hasValue ?tgtQualificationUri .
							?bnode1 sh:minCount ?tgtMinCardinality .
							?bnode1 sh:maxCount ?tgtMaxCardinality .
							?bnode1 sh:node ?tgtQuantityValueNode .

							
							?tgtQuantityValueNode a sh:NodeShape .
							?tgtQuantityValueNode sh:property ?bnode3 .
							?bnode3 sh:path ?tgtUnitRelation .
							?bnode3 sh:hasValue ?tgtUnit .
							?bnode3 sh:minCount 1 . 
							?bnode3 sh:maxCount 1 . # Een gekoppelde waarde mag hooguit 1 unit hebben. (Moet het minstens 1 zijn?)
							?tgtQuantityValueNode sh:property ?bnode4 .
							?bnode4 sh:path rdf:value . 
							?bnode4 sh:minCount 1 . # Een gekoppelde Quantification moet 1 en hooguit 1 getal hebben. 
							?bnode4 sh:maxCount 1 . 
							?bnode4 sh:datatype ?tgtDatatype .
							?bnode4 sh:hasValue ?tgtQuantificationValue .
							?tgtObject rdfs:subClassOf ?bnode2 .
							?bnode2 a owl:Restriction .
							?bnode2 owl:minCardinality ?tgtMinCardinality .
							?bnode2 owl:onProperty ?tgtAspect .
							?bnode2 owl:onClass ?tgtAspectEnumeration .
							?bnode2 owl:hasValue ?tgtQualificationUri .
							?tgtQualificationUri skos:prefLabel ?tgtQualificationName .
							?bnode2 owl:hasValue ?tgtQuantificationValue .
						}
						WHERE {
							BIND (BNODE() AS ?bnode1) .
							BIND (BNODE() AS ?bnode2) .
							
							?hasAspect otl:rel-Relation-toRole ?this .
							?hasAspect otl:rel-Relation-to ?aspect .
							?hasAspect otl:rel-Relation-from ?object .
							?aspect a otl:Aspect .
							# Check if the object has a defined shape, otherwise create a shape
							{
								?hasAspect otl:rel-Relation-from ?object .
								?object otl:rel-Conceptual-hasShape ?shape .
								BIND (URI(STR(?shape)) AS ?tgtShape) .
							}
							UNION
							{
								?hasAspect otl:rel-Relation-toRole ?this .
								?hasAspect otl:rel-Relation-from ?object .
								FILTER NOT EXISTS {
									?object otl:rel-Conceptual-hasShape ?shape .
								} .
								BIND (ex:createURI(CONCAT(ex:localname(?object), \"-Shape\")) AS ?tgtAspectWithValue) .
							} .
							# Check if the aspect has a parent and whether it is an internal or external link 
							OPTIONAL {
								?aspect otl:rel-Conceptual-isSpecializationOf ?parentAspect .
								OPTIONAL {
									?parentAspect shapes:sequence/rdf:_1 ?parentName .
									BIND (URI(STR(?parentAspect)) AS ?newParentAspectURI) .
								} .
								BIND (COALESCE(?newParentAspectURI, ?parentAspect) AS ?tgtParent) .
							} .
							# Check if the aspect is internal or external
							{
								?hasAspect otl:rel-Relation-toRole ?this .
								?hasAspect otl:rel-Relation-to ?aspect .
								?aspect a otl:Aspect .
								BIND (URI(STR(?aspect)) AS ?tgtAspect) .
							}
							UNION
							{
								?hasAspect otl:rel-Relation-toRole ?this .
								?hasAspect otl:rel-Relation-to ?aspect .
								FILTER NOT EXISTS {
									?aspect a otl:Aspect .
								} .
								BIND (?aspect AS ?tgtAspect) .
							} .
							BIND (URI(STR(?object)) AS ?tgtObject) .
							
							# Get all the descriptive information of the aspect
							?aspect shapes:sequence/rdf:_1 ?tgtAspectPrefName .
							OPTIONAL {
								?aspect otl:attr-Conceptual-name ?tgtAspectAltName .
								?aspect shapes:sequence/rdf:_1 ?tgtAspectPrefName .
								FILTER (?tgtAspectAltName != ?tgtAspectPrefName) .
							} .
							OPTIONAL {
								?aspect otl:attr-Conceptual-description ?tgtAspectDescription .
							} .
							OPTIONAL {
								?this otl:attr-Conceptual-note ?tgtAspectNote .
							} .
							OPTIONAL {
								?this otl:attr-Conceptual-code ?tgtAspectCode .
							} .
							OPTIONAL {
								?this otl:attr-Conceptual-abbreviation ?tgtAspectAbbreviation .
							} .
							OPTIONAL {
								?aspect otl:rel-Conceptual-isDescribedIn ?informationField .
								?informationField otl:attr-InformationField-value ?tgtAnnotationValue .
								?informationField otl:rel-InformationField-isClassifiedAs ?informationType .
								?informationType otl:attr-Conceptual-name ?tgtAnnotationName .
								BIND (ex:createURI(MD5(?tgtAnnotationName)) AS ?tgtAnnotationProperty) .
							} .
							OPTIONAL {
								?this otl:rel-RoleOfAspect-PossessedAspect-hasShapeAttribute ?attribute .
								?attribute bm:attr-Component-maxCardinality ?maxCardinality .
								?attribute bm:attr-Component-minCardinality ?minCardinality .
								BIND (STRDT(str(?minCardinality), xsd:integer) AS ?tgtMinCardinality) .
								BIND (STRDT(str(?maxCardinality), xsd:integer) AS ?tgtMaxCardinality) .
							} .
							# Convert aspects that expect a qualification value
							{
								?this otl:rel-RoleOfAspect-PossessedAspect-hasShapeAttribute ?attribute .
								?attribute bm:attr-Attribute-datatype ?tgtDatatype .
								FILTER NOT EXISTS {
									?this otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAsOneOf ?aspectEnumeration .
								} .
								?this otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAs-Qualification ?emptyQualification .
								?emptyQualification otl:attr-Conceptual-name ?EmptyQualificationName .
								FILTER (?EmptyQualificationName = \"\") .
								BIND (sh:datatype AS ?ShaclValueType ) .
								BIND (?tgtDatatype AS ?tgtAspectDatatype) .
								BIND (rdfs:Resource AS ?tgtRangeDatatype) .
								BIND (owl:ObjectProperty AS ?tgtPropertyType) .
							}
							UNION
							# Convert aspects that have a qualification value filled
							{
								?this otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAs-Qualification ?qualification .
								FILTER NOT EXISTS {
									?this otl:rel-RoleOfAspect-PossessedAspect-hasShapeAttribute ?attribute .
								} .
								?qualification otl:attr-Conceptual-name ?tgtQualificationName .
								FILTER (?tgtQualificationName != \"\") .
								BIND (URI(STR(?qualification)) AS ?tgtQualificationUri) .
								BIND (owl:ObjectProperty AS ?tgtPropertyType) .
							}
							UNION
							# Convert aspects with a qualification group
							{
								?this otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAsOneOf ?aspectEnumeration .
								?this otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAs-Qualification ?emptyQualification .
								?emptyQualification otl:attr-Conceptual-name ?EmptyQualificationName .
								FILTER (?EmptyQualificationName = \"\") .
								BIND (URI(STR(?aspectEnumeration)) AS ?tgtAspectEnumeration) .
								BIND (owl:ObjectProperty AS ?tgtPropertyType) .
								BIND (rdfs:Resource AS ?tgtRangeDatatype) .
							}
							UNION
							# Aspects with a quantification
							{
								# Aspects with a filled quantification value
								?this otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAs-Quantification ?quantification .
								{
									?quantification otl:attr-Quantification-value ?tgtQuantificationValue .
								}
								UNION
								# Aspects that expect a quantification value
								{
									?this otl:rel-RoleOfAspect-PossessedAspect-hasShapeAttribute ?attribute .
									?this otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAs-Quantification ?quantification .
									FILTER NOT EXISTS {
										?quantification otl:attr-Quantification-value ?quantificationValue .
									} .
									?attribute bm:attr-Attribute-datatype ?tgtDatatype .
								} .
								# Converting unit of measure
								{
									# If it has been defined that a unit is the same as a QUDT unit the QUDT unit will be used
									?quantification otl:rel-Quantification-isQuantifiedOnScale ?unitOfMeasure .
									?unitOfMeasure otl:rel-Conceptual-hasExternalLink ?externalLink1 .
									?externalLink1 otl:attr-ExternalLink-relation \"isSameAs\" .
									?externalLink1 otl:attr-ExternalLink-uri ?externalLinkUnitUri .
									FILTER regex(str(?externalLinkUnitUri), \"http://qudt.org/vocab/unit/\", \"i\") .
									BIND (sml:hasUnit AS ?unitRelation1) .
								}
								UNION
								{
									?quantification otl:rel-Quantification-isQuantifiedOnScale ?unitOfMeasure .
									FILTER NOT EXISTS {
										?unitOfMeasure otl:rel-Conceptual-hasExternalLink ?externalLink2 .
										?externalLink2 otl:attr-ExternalLink-relation \"isSameAs\" .
										?externalLink2 otl:attr-ExternalLink-uri ?externalLinkUnitUri .
										FILTER regex(str(?externalLinkUnitUri), \"http://qudt.org/vocab/unit/\", \"i\") .
									} .
									BIND (URI(STR(?unitOfMeasure)) AS ?implicitUnit) .
									BIND (<http://schema.org/unitCode> AS ?unitRelation2) .
								} .
								BIND (URI(STR(?this)) AS ?tgtQuantityValueNode) .
								
								BIND (BNODE() AS ?bnode3) .
								BIND (BNODE() AS ?bnode4) .
								BIND (COALESCE(URI(str(?externalLinkUnitUri)), ?implicitUnit) AS ?tgtUnit) .
								BIND (COALESCE(?unitRelation1, ?unitRelation2) AS ?tgtUnitRelation) .
								BIND (owl:ObjectProperty AS ?tgtPropertyType) .
								BIND (sh:class AS ?ShaclValueType ) .
								BIND (sml:QuantityValue AS ?tgtRangeDatatype) .
								BIND (sml:QuantityValue AS ?tgtAspectDatatype) .
							} .
						} 
					""";
      sh:deactivated false
    ];
  sh:targetClass otl:RoleOfAspect-PossessedAspect .

<http://example.org/example#ConvertRelations> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?tgtFrom rdfs:subClassOf ?bnode1 .
				?bnode1 a owl:Restriction .
				?bnode1 owl:onProperty ?tgtRelation .
				?bnode1 owl:onClass ?tgtTo .
				?bnode1 owl:minQualifiedCardinality ?tgtMinCardinality .
				?bnode1 owl:maxQualifiedCardinality ?tgtMaxCardinality .
				?tgtShapeFromLaces a sh:NodeShape .
				?tgtShapeFromLaces sh:targetClass ?tgtFrom .
				?tgtShapeFromLaces sh:property ?bnode2 .
				?bnode2 sh:qualifiedValueShape ?bnode3 .
				?bnode3 sh:class ?tgtTo .
				?bnode2 sh:path ?tgtRelation .
				?bnode2 sh:qualifiedMinCount ?tgtMinCardinality .
				?bnode2 sh:qualifiedMaxCount ?tgtMaxCardinality .
			}
			WHERE {
				BIND (BNODE() AS ?bnode1) .
				BIND (BNODE() AS ?bnode2) .
				BIND (BNODE() AS ?bnode3) .
				?this otl:rel-Relation-from ?from .
				?this otl:rel-Relation-to ?to .
				?this a ?lacesRelation .
				FILTER NOT EXISTS { 
					?lacesRelation rdfs:subClassOf otl:hasAspect .
				}
				FILTER NOT EXISTS { 
					?lacesRelation rdfs:subClassOf otl:isWholeFor .
				}
				OPTIONAL {
					?this otl:attr-Relation-minCardinality ?minCardinality .
				} .
				OPTIONAL {
					?this otl:attr-Relation-maxCardinality ?tgtMaxCardinality .
				} .
				OPTIONAL { 
					?lacesRelation rdfs:seeAlso ?bsRelation0 . 
				}
				OPTIONAL {
					?lacesRelation rdfs:subClassOf ?lacesTopRelation .
					FILTER(STRSTARTS(STR(?lacesTopRelation), \"http://www.laces.tech/publication/\")) .
					?lacesTopRelation rdfs:seeAlso ?bsRelation1 .
				} .
				OPTIONAL {
					?lacesRelation rdfs:subClassOf ?lacesTopRelation .
					FILTER(STRSTARTS(STR(?lacesTopRelation), \"http://www.laces.tech/publication/\")) .
					?lacesTopRelation skos:altLabel ?relationName .
					BIND (ex:createURI(?relationName) AS ?bsRelation2) .
				} .
				OPTIONAL {
					?from otl:rel-Conceptual-hasShape ?shapeFrom .
					BIND (?shapeFrom AS ?shapeFromReused) .
				} .
				BIND (COALESCE(?shapeFromReused, ex:createURI(CONCAT(ex:localname(?from), \"-Shape\"))) AS ?tmpShapeFrom) .
				OPTIONAL {
					?lacesRelation rdfs:subClassOf ?lacesTopRelation .
					FILTER(STRSTARTS(STR(?lacesTopRelation), \"http://www.laces.tech/publication/\")) .
					?lacesTopRelation owl:inverseOf ?inverseRelationStr .
					BIND (URI(?inverseRelationStr) AS ?inverseRelation) .
				} .
				OPTIONAL {
					?to otl:rel-Conceptual-hasShape ?shapeTo .
					BIND (?shapeTo AS ?shapeToReused) .
				} .
				BIND (COALESCE(?shapeToReused, ex:createURI(CONCAT(ex:localname(?to), \"-Shape\"))) AS ?tmpShapeTo) .
				
				BIND (IF(bound(?inverseRelation) && !bound(?bsRelation0), ?to, ?from) AS ?tgtFrom) .
				BIND (IF(bound(?inverseRelation) && !bound(?bsRelation0), ?from, ?to) AS ?tgtTo) .
				BIND (IF(bound(?inverseRelation) && !bound(?bsRelation0), ?tmpShapeTo,?tmpShapeFrom) AS ?tgtShapeFromLaces) .
				BIND (IF(bound(?minCardinality), ?minCardinality, IF(bound(?maxCardinality), ?null, \"0\"^^xsd:nonNegativeInteger)) AS ?tgtMinCardinality) .
				BIND (COALESCE(?bsRelation0, ?inverseRelation, ?bsRelation1, ?bsRelation2) AS ?tgtRelation) .
			}

			""";
      sh:deactivated false
    ];
  sh:targetClass otl:Relation .

<http://example.org/example#CreateOntology> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://purl.org/dc/terms/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
			    ?tgtInferredOntology a owl:Ontology .
			    ?tgtInferredOntology owl:imports <https://w3id.org/sml/def#> .
			    ?tgtInferredOntology dct:date ?tgtVersionDate .
			    ?tgtInferredOntology skos:prefLabel ?tgtOntologyName .
			    ?tgtInferredOntology rdfs:comment ?tgtOntologyDescription .
			    ?tgtPhysicalObject a owl:Class .
			    ?tgtPhysicalObject skos:prefLabel \"physical object\"@en .
			    ?tgtPhysicalObject skos:prefLabel \"fysiek object\"@nl .
			    ?tgtActivity a owl:Class .
			    ?tgtActivity skos:prefLabel \"activity\"@en .
			    ?tgtActivity skos:prefLabel \"activiteit\"@nl .
			    ?tgtFunction a owl:Class .
			    ?tgtFunction skos:prefLabel \"function\"@en .
			    ?tgtFunction skos:prefLabel \"functie\"@nl .
			    ?tgtFunction rdfs:subClassOf ?tgtActivity .
			    ?tgtObjective a owl:Class .
			    ?tgtObjective skos:prefLabel \"objective\"@en .
			    ?tgtObjective skos:prefLabel \"doel\"@nl .
			    ?tgtObjective rdfs:subClassOf sml:State .
			    ?tgtRisk a owl:Class .
			    ?tgtRisk skos:prefLabel \"risk\"@en .
			    ?tgtRisk skos:prefLabel \"risico\"@nl .
			    ?tgtRisk rdfs:subClassOf ?tgtActivity .
			    ?tgtAgent a owl:Class .
			    ?tgtAgent skos:prefLabel \"agent\"@en .
			    ?tgtAgent skos:prefLabel \"actor\"@nl .
			    ?tgtAgent rdfs:subClassOf ?tgtPhysicalObject .
			    ?tgtSpatialRegion a owl:Class .
			    ?tgtSpatialRegion skos:prefLabel \"Geometric entity\"@en .
			    ?tgtSpatialRegion skos:prefLabel \"geometrische entiteit\"@nl .
			    ?tgtEvent a owl:Class .
			    ?tgtEvent skos:prefLabel \"event\"@en .
			    ?tgtEvent skos:prefLabel \"gebeurtenis\"@nl .
			    ?tgtInformationObject a owl:Class .
			    ?tgtInformationObject skos:prefLabel \"information object\"@en .
			    ?tgtInformationObject skos:prefLabel \"informatieobject\"@nl .
			    ?tgtDocument a owl:Class .
			    ?tgtDocument skos:prefLabel \"document\"@en .
			    ?tgtDocument skos:prefLabel \"document\"@nl .
			    ?tgtDocument rdfs:subClassOf ?tgtInformationObject .
			    ?tgtFile a owl:Class .
			    ?tgtFile skos:prefLabel \"file\"@en .
			    ?tgtFile skos:prefLabel \"file\"@nl .
			    ?tgtFile rdfs:subClassOf ?tgtInformationObject .
			    ?tgtEnumerationType a owl:Class .
			    ?tgtEnumerationType skos:prefLabel \"enumeration type\"@en .
			    ?tgtEnumerationType skos:prefLabel \"enumeratietype\"@nl .
			    ?tgtState a owl:Class .
			    ?tgtState skos:prefLabel \"state\"@en .
			    ?tgtState skos:prefLabel \"toestand\"@nl .
			    sml:hasPart a owl:ObjectProperty .
			    sml:hasPart skos:prefLabel \"has part\"@en .
			    sml:hasPart skos:prefLabel \"heeft onderdeel\"@nl .
				?tgtMatter a owl:Class .
			    ?tgtMatter skos:prefLabel \"matter\"@en .
			    ?tgtMatter skos:prefLabel \"materie\"@nl .
				?tgtFunctionalSpace a owl:Class . 
				?tgtFunctionalSpace skos:prefLabel \"Spatial region\"@en . 
				?tgtFunctionalSpace skos:prefLabel \"Ruimtelijk gebied\"@nl . 
			}
			WHERE {
			    ?this a owl:Ontology .
				FILTER (!STRSTARTS(str(?this), \"http://hub.laces.tech/semmtech/schemas\")) .
			    
				?this rdfs:label ?tgtOntologyName .
			    OPTIONAL { 
				?this dct:description ?tgtOntologyDescription .
			    ?this dct:date ?versionDate .
				BIND (REPLACE(?versionDate, \"T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{6}\", \"\") AS ?tgtVersionDate) .
				}
			    BIND (ex:createURI(\"\") AS ?tgtInferredOntology) .
			    BIND (ex:createURI(\"Function\") AS ?tgtFunction) .
			    BIND (ex:createURI(\"Objective\") AS ?tgtObjective) .
			    BIND (ex:createURI(\"Risk\") AS ?tgtRisk) .
			    BIND (ex:createURI(\"Agent\") AS ?tgtAgent) .
			    BIND (ex:createURI(\"Document\") AS ?tgtDocument) .
			    BIND (ex:createURI(\"File\") AS ?tgtFile) .
			    BIND (sml:GeometricEntity AS ?tgtSpatialRegion) .
			    BIND (sml:RealObject AS ?tgtPhysicalObject) .
			    BIND (sml:Activity AS ?tgtActivity) .
			    BIND (sml:Event AS ?tgtEvent) .
			    BIND (sml:InformationObject AS ?tgtInformationObject) .
			    BIND (sml:EnumerationType AS ?tgtEnumerationType) .
			    BIND (sml:State AS ?tgtState) .
				BIND (sml:Matter AS ?tgtMatter) .
				BIND (sml:SpatialRegion AS ?tgtFunctionalSpace ) . 
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass owl:Ontology .

<http://example.org/example#ConvertGroupForQualifications> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?tgtList a rdf:List .
				?tgtList rdf:first ?tgtElementUri .
				?tgtElementUri a ?tgtThis .
				?tgtElementUri skos:prefLabel ?tgtElementName .
				?tgtElementUri skos:definition ?tgtElementDescription .
				?tgtList rdf:rest ?tgtRestList .
				?tgtThis rdfs:subClassOf sml:EnumerationType .
				?tgtThis a owl:Class .
				?tgtThis a sh:NodeShape .
				?tgtThis skos:prefLabel ?tgtEnumerationName .
				?tgtThis sh:in ?tgtListFirst .
				?tgtThis owl:oneOf ?tgtListFirst .
			}
			WHERE {
				?possessedAspect otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAsOneOf ?this .
				?possessedAspect otl:rel-RoleOfAspect-PossessedAspect-isQualifiedAs-Qualification ?emptyQualification .
				?emptyQualification otl:attr-Conceptual-name \"\" .
				{
					SELECT ?this ?qualification ?tgtElementName ((COUNT(?predecessor)) AS ?elementIndex)
					WHERE {
						?this a otl:GroupForQualifications .
						?this otl:rel-Group-isCollectionFor ?qualification .
						OPTIONAL {
							?this otl:rel-Group-isCollectionFor ?predecessor .
							FILTER (str(?predecessor) < str(?qualification)) .
						} .
						?qualification otl:attr-Conceptual-name ?tgtElementName .
					}
					GROUP BY ?this ?qualification ?tgtElementName
				} .
				{
					SELECT ?this ?qualification ?tgtElementName ?tgtElementDescription ((COUNT(?successor)) AS ?isLastElement)
					WHERE {
						?this a otl:GroupForQualifications .
						?this otl:rel-Group-isCollectionFor ?qualification .
						OPTIONAL {
							?this otl:rel-Group-isCollectionFor ?successor .
							FILTER (str(?successor) > str(?qualification)) .
						} .
						?qualification otl:attr-Conceptual-name ?tgtElementName .
						OPTIONAL {
							?qualification otl:attr-Conceptual-description ?tgtElementDescription .
						} .
					}
					GROUP BY ?this ?qualification ?tgtElementName ?tgtElementDescription
				} .
				?this otl:attr-Group-name ?tgtEnumerationName .
				BIND (URI(STR(?this)) AS ?tgtThis) .
				BIND (URI(STR(?qualification)) AS ?tgtElementUri) .
				BIND (CONCAT(str(?tgtThis), \"-list-\") AS ?listBase) .
				BIND (IRI(CONCAT(?listBase, \"0\")) AS ?tgtListFirst) .
				BIND (IRI(CONCAT(?listBase, str(?elementIndex))) AS ?tgtList) .
				BIND (IF((?isLastElement = 0), rdf:nil, URI(CONCAT(?listBase, str((?elementIndex + 1))))) AS ?tgtRestList) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass otl:GroupForQualifications .

<http://example.org/example#ConvertConceptuals> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
			    ?tgtThis a owl:Class .
			    ?tgtThis rdfs:subClassOf ?tgtParentConcept .
			    ?tgtThis skos:prefLabel ?tgtConceptualPrefName .
			    ?tgtThis skos:altLabel ?tgtConceptualAltName .
			    ?tgtThis skos:definition ?tgtConceptualDescription .
			    ?tgtThis skos:note ?tgtConceptualNote .
			    ?tgtThis skos:notation ?tgtConceptualCode .
			    ?tgtThis sml:abbreviation ?tgtConceptualAbbreviation .
			    ?tgtThis ?tgtAnnotationProperty ?tgtAnnotationValue .
			    ?tgtAnnotationProperty a owl:AnnotationProperty .
			    ?tgtAnnotationProperty skos:prefLabel ?tgtAnnotationName .
			    ?tgtAnnotationProperty rdfs:range xsd:string .
			    ?tgtThis sml:isDescribedBy ?tgtInformationCarrier.
			    ?tgtInformationCarrier a ?tgtFile .
			    ?tgtInformationCarrier skos:prefLabel ?tgtInformationCarrierName .
			    ?tgtInformationCarrier skos:definition ?tgtInformationCarrierDescription .
			    ?tgtInformationCarrier rdfs:seeAlso ?tgtInformationCarrierUrl .
			}
			WHERE {
			# Only certain subclasses of otl:Conceptual should be converted into classes (Qualifications for example should not be converted into instances of owl:Class)
				?this a ?conceptual .
    			FILTER (?conceptual IN (otl:PhysicalObject, otl:GeometricalSpace, otl:Activity, otl:Function, otl:Document, otl:FunctionalSpace, otl:Objective, otl:Agent, otl:Event, otl:State, otl:Risk, otl:TimePeriod, otl:Matter)) .
			# If the concept is a specialization of another concept in the OTL, it should be modeled by a rdfs:subClassOf relation between the two concepts
				OPTIONAL {
			        ?this otl:rel-Conceptual-isSpecializationOf ?parentConceptual .
			        OPTIONAL {
			            ?parentConceptual shapes:sequence/rdf:_1 ?parentName .
			            BIND (URI(STR(?parentConceptual)) AS ?newParentConceptualURI) .
			        } .
			    } .
    			BIND (COALESCE(?newParentConceptualURI, ?parentConceptual) AS ?newParentConceptual) .
			# All concepts should be placed under a root concept. These root concepts are only created if it will contain at least one member
			# The top concepts of the OTL are placed under a root concept, all other concepts are placed under their parent
				OPTIONAL {
					?conceptual rdfs:seeAlso ?ntaTopConceptual .
				} .	
				OPTIONAL {
					?conceptual skos:altLabel ?tgtTopConceptualLabel .
					BIND (ex:createURI(?tgtTopConceptualLabel) AS ?lacesTopConceptual) .
				} .
				BIND (COALESCE(?ntaTopConceptual, ?lacesTopConceptual) AS ?tgtTopConceptual) .
				BIND (COALESCE(?newParentConceptual, ?tgtTopConceptual) AS ?tgtParentConcept) .
			
			# This section finds any names, the preferred name, descriptions, notes, codes and abbreviations of the concept (if applicable).
				?this shapes:sequence/rdf:_1 ?tgtConceptualPrefName .
				OPTIONAL {
					?this otl:attr-Conceptual-name ?tgtConceptualAltName .
					?this shapes:sequence/rdf:_1 ?tgtConceptualPrefName .
					FILTER (?tgtConceptualAltName != ?tgtConceptualPrefName) .
				} .
				OPTIONAL {
					?this otl:attr-Conceptual-description ?tgtConceptualDescription .
				} .
				OPTIONAL {
					?this otl:attr-Conceptual-note ?tgtConceptualNote .
				} .
				OPTIONAL {
					?this otl:attr-Conceptual-code ?tgtConceptualCode .
				} .
				OPTIONAL {
					?this otl:attr-Conceptual-abbreviation ?tgtConceptualAbbreviation .
				} .
			# This section finds any extra attributes of a concept that have been stored using the InformationField and InformationType classes. Each attribute is converted to one value by concatenating its InformationType and InformationField value.
				OPTIONAL {
					?this otl:rel-Conceptual-isDescribedIn ?informationField .
					?informationField otl:attr-InformationField-value ?tgtAnnotationValue .
					?informationField otl:rel-InformationField-isClassifiedAs ?informationType .
					?informationType otl:attr-Conceptual-name ?tgtAnnotationName .
					BIND (CONCAT(?tgtAnnotationName, \": \", ?tgtAnnotationValue) AS ?tgtConceptualInformation) .
					FILTER (STRLEN(str(?tgtAnnotationValue)) > 0) .
					BIND (ex:createURI(MD5(?tgtAnnotationName)) AS ?tgtAnnotationProperty) .
				} .
				OPTIONAL {
			        ?this otl:rel-Conceptual-isSubjectOf ?informationCarrier .
			        ?informationCarrier a otl:InformationCarrier .
			        ?informationCarrier otl:attr-InformationCarrier-name ?tgtInformationCarrierName .
			        OPTIONAL {
			            ?informationCarrier otl:attr-InformationCarrier-description ?tgtInformationCarrierDescription .
			        } .
			        OPTIONAL {
			            ?informationCarrier otl:attr-InformationCarrier-url ?InformationCarrierUrl .
			            BIND (URI(str(?InformationCarrierUrl)) AS ?tgtInformationCarrierUrl) .
			        } .
			        BIND (URI(STR(?informationCarrier)) AS ?tgtInformationCarrier) .
			        BIND (ex:createURI(\"File\") AS ?tgtFile) .
			    } .
	
				BIND (URI(STR(?this)) AS ?tgtThis) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass otl:Conceptual .

<http://example.org/example#ConvertWholeFor> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?tgtShapeWhole sh:property ?bnode1 .
				?tgtShapeWhole a sh:NodeShape .
				?tgtShapeWhole sh:targetClass ?tgtObjectWhole .
				?bnode1 sh:path sml:hasPart .
				?bnode1 sh:qualifiedMinCount ?tgtMinCardinalityINT .
				?bnode1 sh:qualifiedMaxCount ?tgtPartMaxCardinalityINT .
				?bnode1 sh:qualifiedValueShape ?bnode2 .
				?bnode2 sh:class ?tgtObjectPart .
				?tgtObjectWhole rdfs:subClassOf ?bnode3 .
				?bnode3 a owl:Restriction .
				?bnode3 owl:onProperty sml:hasPart .
				?bnode3 owl:minQualifiedCardinality ?tgtMinCardinality .
				?bnode3 owl:maxQualifiedCardinality ?tgtPartMaxCardinality .
				?bnode3 owl:onClass ?tgtObjectPart .
			}
			WHERE {
				BIND (BNODE() AS ?bnode1) .
				BIND (BNODE() AS ?bnode2) .
				BIND (BNODE() AS ?bnode3) .
				?this a ?thisType .
				FILTER CONTAINS(str(?thisType), \"isWholeFor\") .
				?this otl:rel-Relation-from ?objectWhole .
				# Check if the ?objectWhole has a name (if not then this object is an external source and the URI should stay the same)
				OPTIONAL {
					?objectWhole shapes:sequence/rdf:_1 ?objectWholeName .
					BIND (URI(STR(?objectWhole)) AS ?objectWholeURI) .
				} .
				BIND (COALESCE(?objectWholeURI, ?objectWhole) AS ?tgtObjectWhole) .
				
				?this otl:rel-Relation-to ?objectPart .
				# Check if ?objectPart has a name (same reason ?objectWhole)
				OPTIONAL {
					?objectPart shapes:sequence/rdf:_1 ?objectPartName .
					BIND (URI(STR(?objectPart)) AS ?objectPartURI) .
				} .
				BIND (COALESCE(?objectPartURI, ?objectPart) AS ?tgtObjectPart) .
				# Check of the ?objectWhole has a shape, if yes, reuse. If not create shape
				OPTIONAL {
					?objectWhole otl:rel-Conceptual-hasShape ?shapeWhole .
					BIND (URI(STR(?shapeWhole)) AS ?tgtShapeWholeReused) .
				} .
				BIND (COALESCE(?tgtShapeWholeReused, ex:createURI(CONCAT(ex:localname(?objectWhole), \"-Shape\"))) AS ?tgtShapeWhole) .
				# Retrieve the minimum cardinality
				OPTIONAL {
					?this otl:attr-Relation-minCardinality ?partMinCardinality .
				} .
				# Find the maximum cardinality
				OPTIONAL {
					?this otl:attr-Relation-maxCardinality ?tgtPartMaxCardinality .
				} .
				BIND (IF((!bound(?partMinCardinality)), IF((!bound(?tgtPartMaxCardinality)), \"0\"^^xsd:nonNegativeInteger, ?undefined), ?partMinCardinality) AS ?tgtMinCardinality) .
				BIND (STRDT(str(?tgtMinCardinality), xsd:integer) AS ?tgtMinCardinalityINT) .
				BIND (STRDT(str(?tgtPartMaxCardinality), xsd:integer) AS ?tgtPartMaxCardinalityINT) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass otl:isWholeFor .

<http://example.org/example#createURI> a sh:SPARQLFunction;
  sh:returnType rdfs:Resource;
  sh:parameter [
      sh:path <http://example.org/example#op1>;
      sh:description "The first operand";
      sh:datatype xsd:string
    ];
  sh:select """
		SELECT ?uri
		WHERE {	
			?namespace a owl:Ontology .
			FILTER (!STRSTARTS(str(?namespace), \"http://hub.laces.tech/semmtech/schemas\")) . 
			?namespace rdfs:label ?ontologyName . # This one also does nothing, but can be left in. 
			?namespace <http://purl.org/dc/terms/description> ?description . 

			BIND (URI(CONCAT(STR(?namespace),  str($op1))) AS ?uri) .
		}
		LIMIT 1
		""";
  sh:prefixes <http://purl.org/dc/terms/>, <http://www.w3.org/2002/07/owl#>, <http://www.w3.org/2000/01/rdf-schema#>,
    <http://example.org/example#> .

<http://example.org/example#ConvertGroups> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?tgtThis a rdfs:Container .
				?tgtThis skos:prefLabel ?tgtGroupName .
				?tgtThis rdfs:member ?tgtConceptual .
				?tgtThis rdfs:member ?tgtPartGroup .
			}
			WHERE {
			# otl:GroupForQualifications is a subclass of otl:Group. Its instances should not be used in this conversion
				FILTER NOT EXISTS {
					?this a otl:GroupForQualifications .
				} .
			# Find the conceptuals that are part of the group
				?this otl:rel-Group-isCollectionFor ?conceptual .
				BIND (URI(STR(?conceptual)) AS ?tgtConceptual) .
			# Find the group names if applicable
				OPTIONAL {
					?this otl:attr-Group-name ?tgtGroupName .
				} .
			# Find groups that are part of this group, these will be added as group members, just like conceptuals
				OPTIONAL {
					?this otl:rel-Group-isWholeFor ?partGroup .
					BIND (URI(STR(?partGroup)) AS ?tgtPartGroup) .
				} .
				BIND (URI(STR(?this)) AS ?tgtThis) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass otl:Group .

<http://example.org/example#ConvertExternalSource> a sh:NodeShape;
  sh:rule [ a sh:SPARQLRule;
      sh:prefixes <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, <http://www.w3.org/2001/XMLSchema#>,
        <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>,
        <https://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/2002/07/owl#>,
        <http://www.w3.org/2000/01/rdf-schema#>, <http://example.org/example#>, <https://w3id.org/sml/def#>,
        <http://www.w3.org/2004/02/skos/core#>, <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>;
      sh:construct """	
			CONSTRUCT {
				?childConceptual rdfs:subClassOf ?tgtThis .
				?tgtThis owl:equivalentClass ?tgtSameAsExternalURI .
				?tgtThis skos:related ?tgtRelatedToExternalURI .
				?tgtThis ?shallBeCompliantWith ?tgtIsCompliantWithExternalURI .
			}
			WHERE {
				?this a ?conceptual .
				OPTIONAL {
					?childConceptual otl:rel-Conceptual-isSpecializationOf ?this .
					FILTER NOT EXISTS {
						?childConceptual otl:attr-Conceptual-name ?childName .
					} .
				} .
				OPTIONAL {
					?this otl:rel-Conceptual-hasExternalLink ?1externalRelation .
					?1externalRelation a otl:ExternalLink .
					?1externalRelation otl:attr-ExternalLink-relation \"isSameAs\" .
					?1externalRelation otl:attr-ExternalLink-uri ?sameAsExternalURI .
					FILTER (!regex(str(?sameAsExternalURI), \"http://qudt.org/vocab/unit/\", \"i\")) .
					BIND (URI(str(?sameAsExternalURI)) AS ?tgtSameAsExternalURI) .
				} .
				OPTIONAL {
					?this otl:rel-Conceptual-hasExternalLink ?2externalRelation .
					?2externalRelation a otl:ExternalLink .
					?2externalRelation otl:attr-ExternalLink-relation \"isRelatedTo\" .
					?2externalRelation otl:attr-ExternalLink-uri ?relatedToExternalURI .
					BIND (URI(str(?relatedToExternalURI)) AS ?tgtRelatedToExternalURI) .
				} .
				OPTIONAL {
					?this otl:rel-Conceptual-hasExternalLink ?3externalRelation .
					?3externalRelation a otl:ExternalLink .
					?3externalRelation otl:attr-ExternalLink-relation \"isCompliantWith\" .
					?3externalRelation otl:attr-ExternalLink-uri ?isCompliantWithExternalURI .
					BIND (URI(str(?isCompliantWithExternalURI)) AS ?tgtIsCompliantWithExternalURI) .
					BIND (ex:createURI(\"shallBeCompliantWith\") AS ?shallBeCompliantWith) .
				} .
				BIND (URI(STR(?this)) AS ?tgtThis) .
			}
			""";
      sh:deactivated false
    ];
  sh:targetClass otl:Conceptual .

<http://example.org/example#localname> a sh:SPARQLFunction;
  sh:returnType rdfs:Resource;
  sh:parameter [
      sh:path <http://example.org/example#op1>;
      sh:description "The first operand";
      sh:datatype xsd:string
    ];
  sh:select """
		SELECT ?localname
		WHERE {
			BIND (IF(CONTAINS(str($op1), \"#\"), STRAFTER(str($op1), \"#\"), REPLACE(str($op1), \"(.*)[//]\", \"\")) AS ?localname) .
		}
		""";
  sh:prefixes <http://example.org/example#> .

## Mappings to upper ontology (NEN 2660), or create new terms where needed

otl:consistsOf rdfs:seeAlso <https://w3id.org/sml/def#consistsOf> .

## Functional spaces tree in Laces
otl:FunctionalSpace rdfs:seeAlso <https://w3id.org/sml/def#SpatialRegion> .

## Events tree in Laces
otl:Event rdfs:seeAlso <https://w3id.org/sml/def#Event> .

## Matter tree in Laces
otl:Matter rdfs:seeAlso <https://w3id.org/sml/def#Matter> .

otl:TimePeriod rdfs:seeAlso <https://w3id.org/sml/def#TemporalEntity> .

## Physical objects tree in Laces
otl:PhysicalObject rdfs:seeAlso <https://w3id.org/sml/def#RealObject> .

otl:transforms rdfs:seeAlso <https://w3id.org/sml/def#transforms>;
  skos:altLabel "transforms" .

## States tree in Laces
otl:State rdfs:seeAlso <https://w3id.org/sml/def#State> .

otl:isPerformerOf rdfs:seeAlso <https://w3id.org/sml/def#executes>;
  skos:altLabel "isPerformerOf" .

## Geometries tree in Laces
otl:GeometricalSpace rdfs:seeAlso <https://w3id.org/sml/def#GeometricEntity> .

## Activities tree in Laces
otl:Activity rdfs:seeAlso <https://w3id.org/sml/def#Activity> .

otl:PhysicalObject-isLocatedAt-GeometricalSpace rdfs:seeAlso <https://w3id.org/sml/def#hasInterior> .

lkos:IndividualActivity rdfs:seeAlso <https://w3id.org/sml/def#Activity> .

lkos:IndividualObject rdfs:seeAlso <https://w3id.org/sml/def#RealObject> .

otl:FunctionalSpace-isLocatedAt-GeometricalSpace rdfs:seeAlso <https://w3id.org/sml/def#hasInterior> .

otl:Activity-isLocatedAt-GeometricalSpace rdfs:seeAlso <https://w3id.org/sml/def#hasInterior> .

otl:hasState rdfs:seeAlso <https://w3id.org/sml/def#hasState> .

otl:isConnectedTo rdfs:seeAlso <https://w3id.org/sml/def#isConnectedTo> .

## Functions tree in Laces
otl:Function rdfs:seeAlso <https://w3id.org/sml/def#Function> .

otl:isSupportiveFor skos:altLabel "isSupportiveFor" .

otl:isApproverOf skos:altLabel "isApproverOf" .

otl:isOutputOf skos:altLabel "isOutputOf" .

otl:isInputOf skos:altLabel "isInputOf" .

## Agents tree in Laces (no NEN 2660 equivalent)
otl:Agent skos:altLabel "Agent" .

otl:isReleaserOf skos:altLabel "isReleaserOf" .

otl:isResponsibleFor skos:altLabel "isResponsibleFor" .

otl:isFulfillerOf skos:altLabel "isFulfillerOf" .

otl:Objective skos:altLabel "Objective" .

## Documents tree in Laces (no NEN 2660 equivalent)
otl:Document skos:altLabel "Document" .

otl:isAuthorOf skos:altLabel "isAuthorOf" .

otl:isConsultedFor skos:altLabel "isConsultedFor" .

otl:isAccountableFor skos:altLabel "isAccountableFor" .

otl:isInformedFor skos:altLabel "isInformedFor" .

## Risks tree in Laces (no NEN 2660 equivalent)
otl:Risk skos:altLabel "Risk" .

lkos:IndividualAgent skos:altLabel "Agent" .

lkos:IndividualObjective skos:altLabel "Objective" .

lkos:IndividualFunction skos:altLabel "Function" .

lkos:IndividualDocument skos:altLabel "Document" .

lkos:IndividualSpace skos:altLabel "Space" .

otl:hasAsSubject skos:altLabel "hasAsSubject" .

<http://www.w3.org/1999/02/22-rdf-syntax-ns#> sh:declare [
      sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI;
      sh:prefix "rdf"
    ] .

<http://www.w3.org/2001/XMLSchema#> sh:declare [
      sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI;
      sh:prefix "xsd"
    ] .

<http://purl.org/dc/terms/> sh:declare [
      sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI;
      sh:prefix "dct"
    ] .

<http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/> sh:declare
    [
      sh:namespace "http://www.laces.tech/publication/ns/semmtech/live/laces/schema/shapes/"^^xsd:anyURI;
      sh:prefix "shapes"
    ] .

<http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/>
  sh:declare [
      sh:namespace "http://www.laces.tech/publication/ns/semmtech/live/laces/schema/blueprint-manager/"^^xsd:anyURI;
      sh:prefix "bm"
    ] .

<https://schema.org/> sh:declare [
      sh:namespace "https://schema.org/"^^xsd:anyURI;
      sh:prefix "schema"
    ] .

<http://www.w3.org/ns/shacl#> sh:declare [
      sh:namespace "http://www.w3.org/ns/shacl#"^^xsd:anyURI;
      sh:prefix "sh"
    ] .

<http://www.w3.org/2002/07/owl#> sh:declare [
      sh:namespace "http://www.w3.org/2002/07/owl#"^^xsd:anyURI;
      sh:prefix "owl"
    ] .

<http://www.w3.org/2000/01/rdf-schema#> sh:declare [
      sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI;
      sh:prefix "rdfs"
    ] .

<http://example.org/example#> sh:declare [
      sh:namespace "http://example.org/example#"^^xsd:anyURI;
      sh:prefix "ex"
    ] .

<https://w3id.org/sml/def#> sh:declare [
      sh:namespace "https://w3id.org/sml/def#"^^xsd:anyURI;
      sh:prefix "sml"
    ] .

<http://www.w3.org/2004/02/skos/core#> sh:declare [
      sh:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI;
      sh:prefix "skos"
    ] .

<http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/> sh:declare
    [
      sh:namespace "http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/"^^xsd:anyURI;
      sh:prefix "otl"
    ] .

<https://w3id.org/def/basicsemantics-owl#> sh:declare [
      sh:namespace "https://w3id.org/def/basicsemantics-owl#"^^xsd:anyURI;
      sh:prefix "bs"
    ] .

<http://www.laces.tech/publication/ns/semmtech/live/laces/schema/specifications/>
  sh:declare [
      sh:namespace "http://www.laces.tech/publication/ns/semmtech/live/laces/schema/specifications/"^^xsd:anyURI;
      sh:prefix "specifications"
    ] .

<http://www.laces.tech/publication/ns/semmtech/live/laces/schema/kos/> sh:declare
    [
      sh:namespace "http://www.laces.tech/publication/ns/semmtech/live/laces/schema/kos/"^^xsd:anyURI;
      sh:prefix "kos"
    ] .

otl:isLocatedAt owl:inverseOf <https://w3id.org/sml/def#contains> .

otl:describes owl:inverseOf <https://w3id.org/sml/def#isDescribedBy> .
